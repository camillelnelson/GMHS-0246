#include <kipr/wombat.h>

void turn_right (float degrees);
void turn_left (float degrees);  
void forward (int distance);
void backwards (int distance);
int dis_var=212; 
float deg_var=12.6;

int main()
{
enable_servos();
wait_for_light(0);
shut_down_in(120);

//start of game - ~60 seconds
set_servo_position(2,900); //good
turn_left(90); //good
backwards(30); //good
set_servo_position(2,1950); //good
turn_left(40);
backwards(6); 
turn_left(50); 
backwards(13.5); 
    set_servo_position(2,750);
turn_left(90);
    while((digital(9)==0)||(digital(7)==0))
{mav(0,500);
mav(3,500);}
backwards(40);
    turn_left(2);
    backwards(1);
    turn_right(2);
    backwards(1);
     turn_left(2);
    backwards(1);
    turn_right(2);
    backwards(1);
        turn_left(2);
    backwards(1);
    turn_right(2);
    backwards(1);
    turn_left(2);
    backwards(1);
    backwards(20);
    turn_left(90);
    while((digital(9)==0)||(digital(7)==0))
    {mav(0,500);
mav(3,500);}
    backwards(21);
    turn_right(90);
    backwards(24);
    msleep(15000);
    forward(10);
    turn_left(90);
    while((digital(9)==0)||(digital(7)==0))
    {mav(0,500);
mav(3,500);}
    backwards(18);
    set_servo_position(2,1950);
    forward(10);
    turn_right(90);
    forward(40);
/*
//~ 60 seconds - ~120 seconds
backwards(13); //find exact value
turn_left(90);
forward(50); //find exact value
turn_left(90);
forward(10); //find exact value, placing wireshark under the ping pong balls
backwards(5);
turn_left(180);

*/


return 0;
}

void turn_left(float degrees)
{cmpc(0);
    while (gmpc(0)<deg_var*degrees)
    {
     mav(0,750);
        mav(3,-750);
    } 
    mav(0,0);
        mav(3,0);
}

void turn_right(float degrees)
{cmpc(3);
    while (gmpc(3)<deg_var*degrees)
    {
     mav(0,-750);
        mav(3,750);
    } 
    mav(0,0);
        mav(3,0);
}

void forward(int distance)
{cmpc(0);
 while(gmpc(0)<distance*dis_var)
 {mav(0,1000);
mav(3,1000);
 }
mav(0,0);
mav(3,0);
}



void backwards(int distance)
{cmpc(0);
 while(gmpc(0)>-distance*dis_var)
 {mav(0,-1000);
mav(3,-1000);
 }
mav(0,0);
mav(3,0);
}
